local ReplicatedStorage = game:GetService("ReplicatedStorage")

-- === MAIN GUI ===
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "HalloweenQueueUI"
ScreenGui.ResetOnSpawn = false
ScreenGui.Parent = game.CoreGui

local Frame = Instance.new("Frame")
Frame.Size = UDim2.new(0, 260, 0, 250)
Frame.Position = UDim2.new(0.5, -130, 0.5, -125)
Frame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
Frame.BorderSizePixel = 0
Frame.BackgroundTransparency = 0.15
Frame.Active = true
Frame.Draggable = true
Frame.Parent = ScreenGui

local corner = Instance.new("UICorner")
corner.CornerRadius = UDim.new(0, 10)
corner.Parent = Frame

local glow = Instance.new("UIStroke")
glow.Color = Color3.fromRGB(255, 120, 0)
glow.Thickness = 1.2
glow.Parent = Frame

local Title = Instance.new("TextLabel")
Title.Size = UDim2.new(1, 0, 0, 32)
Title.BackgroundTransparency = 1
Title.Text = "🎃 Halloween Craft Queue"
Title.TextColor3 = Color3.fromRGB(255, 160, 50)
Title.Font = Enum.Font.GothamBold
Title.TextSize = 16
Title.Parent = Frame

local Line = Instance.new("Frame")
Line.Size = UDim2.new(1, -20, 0, 1)
Line.Position = UDim2.new(0, 10, 0, 33)
Line.BackgroundColor3 = Color3.fromRGB(255, 120, 0)
Line.BorderSizePixel = 0
Line.Parent = Frame

local Scrolling = Instance.new("ScrollingFrame")
Scrolling.Size = UDim2.new(1, -10, 1, -45)
Scrolling.Position = UDim2.new(0, 5, 0, 40)
Scrolling.BackgroundTransparency = 1
Scrolling.ScrollBarThickness = 4
Scrolling.AutomaticCanvasSize = Enum.AutomaticSize.Y
Scrolling.Parent = Frame

local Layout = Instance.new("UIListLayout")
Layout.Padding = UDim.new(0, 5)
Layout.SortOrder = Enum.SortOrder.LayoutOrder
Layout.Parent = Scrolling

-- === BUTTON CREATION ===
local function CreateGroupButton(petName, count, shiny, finishedCount)
	local btn = Instance.new("TextButton")
	btn.Size = UDim2.new(1, -10, 0, 28)
	btn.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
	btn.TextColor3 = finishedCount == count and Color3.fromRGB(80, 255, 80) or Color3.fromRGB(255, 255, 255)
	btn.TextXAlignment = Enum.TextXAlignment.Left
	btn.Font = Enum.Font.Gotham
	btn.TextSize = 14
	btn.AutoButtonColor = true
	btn.Text = string.format("%s%s ×%d%s", petName, shiny and " ⭐" or "", count, finishedCount > 0 and string.format("  (%d done)", finishedCount) or "")
	
	local c = Instance.new("UICorner")
	c.CornerRadius = UDim.new(0, 6)
	c.Parent = btn
	
	return btn
end

-- === SUB ENTRY CREATION ===
local function CreateSubEntry(i, remaining)
	local lbl = Instance.new("TextLabel")
	lbl.Size = UDim2.new(1, -20, 0, 22)
	lbl.BackgroundTransparency = 1
	lbl.Font = Enum.Font.Gotham
	lbl.TextSize = 13
	lbl.TextXAlignment = Enum.TextXAlignment.Left

	if remaining <= 0 then
		lbl.TextColor3 = Color3.fromRGB(80, 255, 80)
		lbl.Text = string.format("✅ Slot #%d — Finished!", i)
	else
		local mins = math.floor(remaining / 60)
		lbl.TextColor3 = Color3.fromRGB(220, 220, 220)
		lbl.Text = string.format("⏳ Slot #%d — %d min left", i, mins)
	end

	return lbl
end

-- === DETAILS POPUP ===
local function ShowDetailsMenu(petName, entries)
	local Popup = Instance.new("Frame")
	Popup.Size = UDim2.new(0, 280, 0, 300)
	Popup.Position = UDim2.new(0.5, -140, 0.5, -150)
	Popup.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
	Popup.BorderSizePixel = 0
	Popup.Active = true
	Popup.Draggable = true
	Popup.Parent = ScreenGui

	local corner = Instance.new("UICorner")
	corner.CornerRadius = UDim.new(0, 10)
	corner.Parent = Popup

	local glow = Instance.new("UIStroke")
	glow.Color = Color3.fromRGB(255, 120, 0)
	glow.Thickness = 1.1
	glow.Parent = Popup

	local Title = Instance.new("TextLabel")
	Title.Size = UDim2.new(1, -40, 0, 32)
	Title.Position = UDim2.new(0, 10, 0, 5)
	Title.BackgroundTransparency = 1
	Title.Text = "🦇 " .. petName .. " Details"
	Title.TextColor3 = Color3.fromRGB(255, 160, 50)
	Title.Font = Enum.Font.GothamBold
	Title.TextSize = 16
	Title.TextXAlignment = Enum.TextXAlignment.Left
	Title.Parent = Popup

	local Close = Instance.new("TextButton")
	Close.Size = UDim2.new(0, 25, 0, 25)
	Close.Position = UDim2.new(1, -30, 0, 5)
	Close.BackgroundTransparency = 1
	Close.Text = "✖"
	Close.TextColor3 = Color3.fromRGB(255, 120, 0)
	Close.Font = Enum.Font.GothamBold
	Close.TextSize = 18
	Close.Parent = Popup

	Close.MouseButton1Click:Connect(function()
		Popup:Destroy()
	end)

	local Line = Instance.new("Frame")
	Line.Size = UDim2.new(1, -20, 0, 1)
	Line.Position = UDim2.new(0, 10, 0, 35)
	Line.BackgroundColor3 = Color3.fromRGB(255, 120, 0)
	Line.BorderSizePixel = 0
	Line.Parent = Popup

	local Scrolling = Instance.new("ScrollingFrame")
	Scrolling.Size = UDim2.new(1, -10, 1, -45)
	Scrolling.Position = UDim2.new(0, 5, 0, 40)
	Scrolling.BackgroundTransparency = 1
	Scrolling.ScrollBarThickness = 4
	Scrolling.AutomaticCanvasSize = Enum.AutomaticSize.Y
	Scrolling.Parent = Popup

	local Layout = Instance.new("UIListLayout")
	Layout.Padding = UDim.new(0, 4)
	Layout.SortOrder = Enum.SortOrder.LayoutOrder
	Layout.Parent = Scrolling

	for i, entry in ipairs(entries) do
		local sub = CreateSubEntry(i, entry.Remaining or 0)
		sub.Parent = Scrolling
	end
end

-- === MAIN UPDATE FUNCTION ===
local function UpdateQueue()
	local success, data = pcall(function()
		return ReplicatedStorage.Network.HalloweenCraftingMachine_GetQueue:InvokeServer()
	end)

	for _, c in ipairs(Scrolling:GetChildren()) do
		if c:IsA("GuiObject") and c ~= Layout then
			c:Destroy()
		end
	end

	if not success or not data then
		local err = Instance.new("TextLabel")
		err.Size = UDim2.new(1, 0, 0, 20)
		err.BackgroundTransparency = 1
		err.Text = "Failed to fetch data ❌"
		err.TextColor3 = Color3.fromRGB(255, 80, 80)
		err.Font = Enum.Font.Gotham
		err.TextSize = 14
		err.Parent = Scrolling
		return
	end

	if #data == 0 then
		local none = Instance.new("TextLabel")
		none.Size = UDim2.new(1, 0, 0, 20)
		none.BackgroundTransparency = 1
		none.Text = "No active craftings."
		none.TextColor3 = Color3.fromRGB(180, 180, 180)
		none.Font = Enum.Font.Gotham
		none.TextSize = 14
		none.Parent = Scrolling
		return
	end

	local grouped = {}
	for _, entry in ipairs(data) do
		local petName = entry.Result and entry.Result.Data and entry.Result.Data.id or "?"
		grouped[petName] = grouped[petName] or {}
		table.insert(grouped[petName], entry)
	end

	for petName, entries in pairs(grouped) do
		local shiny = entries[1].Options and entries[1].Options.shiny
		local finishedCount = 0
		for _, e in ipairs(entries) do
			if (e.Remaining or 0) <= 0 then
				finishedCount += 1
			end
		end

		local btn = CreateGroupButton(petName, #entries, shiny, finishedCount)
		btn.Parent = Scrolling
		btn.MouseButton1Click:Connect(function()
			ShowDetailsMenu(petName, entries)
		end)
	end
end

-- === LOOP ===
task.spawn(function()
	while true do
		UpdateQueue()
		task.wait(2)
	end
end)
